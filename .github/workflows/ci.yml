name: CMake 

# This workflow runs when code is pushed to or a pull request is opened to the 'main' branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Define environment variables
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  # Define a job called 'build'
  build:
    # This job will run on the latest version of Ubuntu
    runs-on: ubuntu-latest

    # Define the steps for the job
    steps:
    # Step 1: Checkout the code from the repository
    - uses: actions/checkout@v2

    # Step 2: Configure CMake
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    # Step 3: Build the project
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # Step 4: Download and configure Google Test
    - name: Download and configure Google Test
      run: |
        git clone https://github.com/google/googletest.git
        cd googletest
        mkdir build && cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_GTEST=ON -DBUILD_GMOCK=OFF ../
        cmake --build .

    # Step 5: Run tests
    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ctest -C ${{env.BUILD_TYPE}}
        # Run the Google Test executable
        ./path/to/test/binary

    # Step 6: Set up QEMU
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    # Step 7: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    # Step 8: Log in to Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    # Step 9: Build and push the Docker image
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: hugosilva04/iot_team:latest
